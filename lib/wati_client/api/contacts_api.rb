=begin
#WhatsApp chat API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'cgi'

module WatiClient
  class ContactsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Add Contact
    # @param whatsapp_number [String] WhatsApp Number with country code. Example, 85264318721
    # @param [Hash] opts the optional parameters
    # @option opts [NewContactModel] :new_contact_model Contact Attributes
    # @return [nil]
    def v1_add_contact_whatsapp_number_post(whatsapp_number, opts = {})
      v1_add_contact_whatsapp_number_post_with_http_info(whatsapp_number, opts)
      nil
    end

    # Add Contact
    # @param whatsapp_number [String] WhatsApp Number with country code. Example, 85264318721
    # @param [Hash] opts the optional parameters
    # @option opts [NewContactModel] :new_contact_model Contact Attributes
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_add_contact_whatsapp_number_post_with_http_info(whatsapp_number, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ContactsApi.v1_add_contact_whatsapp_number_post ...'
      end
      # verify the required parameter 'whatsapp_number' is set
      if @api_client.config.client_side_validation && whatsapp_number.nil?
        fail ArgumentError, "Missing the required parameter 'whatsapp_number' when calling ContactsApi.v1_add_contact_whatsapp_number_post"
      end
      # resource path
      local_var_path = '/v1/addContact/{whatsappNumber}'.sub('{' + 'whatsappNumber' + '}', CGI.escape(whatsapp_number.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'new_contact_model'])

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"ContactsApi.v1_add_contact_whatsapp_number_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContactsApi#v1_add_contact_whatsapp_number_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Contacts List
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size Page Size
    # @option opts [Integer] :page_number Page Number
    # @option opts [String] :name Contact Name
    # @option opts [String] :attribute Attribute (parameters format : [{name: \&quot;name\&quot;, operator: \&quot;contain\&quot;, value: \&quot;test\&quot;}] )&lt;br /&gt;  Possible values for operator are contain, notContain, exist, notExist, &#x3D;&#x3D;, !&#x3D;, valid, invalid
    # @option opts [String] :created_date Created Date (YYYY-MM-DD or MM-DD-YYYY)
    # @return [nil]
    def v1_get_contacts_get(opts = {})
      v1_get_contacts_get_with_http_info(opts)
      nil
    end

    # Get Contacts List
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page_size Page Size
    # @option opts [Integer] :page_number Page Number
    # @option opts [String] :name Contact Name
    # @option opts [String] :attribute Attribute (parameters format : [{name: \&quot;name\&quot;, operator: \&quot;contain\&quot;, value: \&quot;test\&quot;}] )&lt;br /&gt;  Possible values for operator are contain, notContain, exist, notExist, &#x3D;&#x3D;, !&#x3D;, valid, invalid
    # @option opts [String] :created_date Created Date (YYYY-MM-DD or MM-DD-YYYY)
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_get_contacts_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ContactsApi.v1_get_contacts_get ...'
      end
      # resource path
      local_var_path = '/v1/getContacts'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'pageNumber'] = opts[:'page_number'] if !opts[:'page_number'].nil?
      query_params[:'name'] = opts[:'name'] if !opts[:'name'].nil?
      query_params[:'attribute'] = opts[:'attribute'] if !opts[:'attribute'].nil?
      query_params[:'createdDate'] = opts[:'created_date'] if !opts[:'created_date'].nil?

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"ContactsApi.v1_get_contacts_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContactsApi#v1_get_contacts_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update Contact Attributes
    # @param whatsapp_number [String] WhatsApp Number with country code. Example, 85264318721
    # @param [Hash] opts the optional parameters
    # @option opts [UpdateCustomParamsModel] :update_custom_params_model Contact Attributes
    # @return [nil]
    def v1_update_contact_attributes_whatsapp_number_post(whatsapp_number, opts = {})
      v1_update_contact_attributes_whatsapp_number_post_with_http_info(whatsapp_number, opts)
      nil
    end

    # Update Contact Attributes
    # @param whatsapp_number [String] WhatsApp Number with country code. Example, 85264318721
    # @param [Hash] opts the optional parameters
    # @option opts [UpdateCustomParamsModel] :update_custom_params_model Contact Attributes
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def v1_update_contact_attributes_whatsapp_number_post_with_http_info(whatsapp_number, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ContactsApi.v1_update_contact_attributes_whatsapp_number_post ...'
      end
      # verify the required parameter 'whatsapp_number' is set
      if @api_client.config.client_side_validation && whatsapp_number.nil?
        fail ArgumentError, "Missing the required parameter 'whatsapp_number' when calling ContactsApi.v1_update_contact_attributes_whatsapp_number_post"
      end
      # resource path
      local_var_path = '/v1/updateContactAttributes/{whatsappNumber}'.sub('{' + 'whatsappNumber' + '}', CGI.escape(whatsapp_number.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'update_custom_params_model'])

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"ContactsApi.v1_update_contact_attributes_whatsapp_number_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContactsApi#v1_update_contact_attributes_whatsapp_number_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end

=begin
#WhatsApp chat API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for WatiClient::MessagesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MessagesApi' do
  before do
    # run before each test
    @api_instance = WatiClient::MessagesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MessagesApi' do
    it 'should create an instance of MessagesApi' do
      expect(@api_instance).to be_instance_of(WatiClient::MessagesApi)
    end
  end

  # unit tests for v1_get_message_templates_get
  # Get Message Templates
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size Page Size
  # @option opts [Integer] :page_number Page Number
  # @return [nil]
  describe 'v1_get_message_templates_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_get_messages_whatsapp_number_get
  # Get Messages by whatsapp number
  # @param whatsapp_number WhatsApp Number with country code. Example, 85264318721
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size Page Size
  # @option opts [Integer] :page_number Page Number
  # @return [nil]
  describe 'v1_get_messages_whatsapp_number_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_send_interactive_buttons_message_post
  # Send Interactive Buttons Message
  # @param whatsapp_number WhatsApp Number with country code. Example, 85264318721
  # @param [Hash] opts the optional parameters
  # @option opts [ButtonsMessage] :buttons_message &lt;u&gt;    &lt;b&gt;InteractiveButtonsMessage&lt;/b&gt;  &lt;/u&gt;  &lt;br /&gt;  &lt;br /&gt;  &lt;b&gt;Header:&lt;/b&gt;  &lt;br /&gt;                  {&lt;br /&gt;                    \&quot;type\&quot;: \&quot;&lt;b&gt;Text&lt;/b&gt; or &lt;b&gt;Video&lt;/b&gt; or &lt;b&gt;Image&lt;/b&gt; or &lt;b&gt;Document&lt;/b&gt;\&quot;,&lt;br /&gt;                    \&quot;text\&quot;:\&quot;header text for type &lt;b&gt;Text&lt;/b&gt;\&quot;,&lt;br /&gt;                    \&quot;media\&quot;: {&lt;br /&gt;                          \&quot;url\&quot;:\&quot;https://...\&quot;, // (media obj should be not empty for non &lt;b&gt;Text&lt;/b&gt; types)&lt;br /&gt;                          \&quot;fileName\&quot;: \&quot;MyDoc.pdf\&quot;} // (this field is only &lt;b&gt;Document&lt;/b&gt; type) &lt;br /&gt;                  }&lt;br /&gt;&lt;b&gt;Buttons:&lt;/b&gt;&lt;br /&gt; allowed count: &lt;b&gt;1-3&lt;/b&gt;&lt;br /&gt;&lt;b&gt;Allowed characters length after mapping:&lt;/b&gt;&lt;br /&gt;                  header text: &lt;b&gt;60&lt;/b&gt;&lt;br /&gt;                  body text: &lt;b&gt;1024&lt;/b&gt;&lt;br /&gt;                  footer text: &lt;b&gt;60&lt;/b&gt;&lt;br /&gt;                  button&#39;s text: &lt;b&gt;20&lt;/b&gt;&lt;br /&gt;
  # @return [nil]
  describe 'v1_send_interactive_buttons_message_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_send_interactive_list_message_post
  # Send Interactive List Message
  # @param whatsapp_number WhatsApp Number with country code. Example, 85264318721
  # @param [Hash] opts the optional parameters
  # @option opts [ListMessage] :list_message &lt;u&gt;    &lt;b&gt;InteractiveListMessage&lt;/b&gt;  &lt;/u&gt;  &lt;br /&gt;  &lt;br /&gt;  &lt;b&gt;Rows:&lt;/b&gt;  &lt;br /&gt; allowed count: &lt;b&gt;1-10&lt;/b&gt;&lt;br /&gt;&lt;b&gt;Allowed characters length after mapping:&lt;/b&gt;&lt;br /&gt;                  header text: &lt;b&gt;60&lt;/b&gt;&lt;br /&gt;                  body text: &lt;b&gt;1024&lt;/b&gt;&lt;br /&gt;                  footer text: &lt;b&gt;60&lt;/b&gt;&lt;br /&gt;                  section title: &lt;b&gt;24&lt;/b&gt;&lt;br /&gt;                  row title: &lt;b&gt;24&lt;/b&gt;&lt;br /&gt;                  row description: &lt;b&gt;72&lt;/b&gt;&lt;br /&gt;
  # @return [nil]
  describe 'v1_send_interactive_list_message_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_send_session_file_whatsapp_number_post
  # Send File to opened session
  # @param whatsapp_number WhatsApp Number with country code. Example, 85264318721
  # @param file 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :caption (optional)
  # @return [nil]
  describe 'v1_send_session_file_whatsapp_number_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_send_session_message_whatsapp_number_post
  # Send Message to opened session
  # @param whatsapp_number WhatsApp Number with country code. Example, 85264318721
  # @param message_text Message to send
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_send_session_message_whatsapp_number_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_send_template_message_csv_post
  # Send template messages(CSV)
  # @param template_name Defined in the Template Message under Broadcast
  # @param broadcast_name Broadcast Name
  # @param whatsapp_numbers_csv 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_send_template_message_csv_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_send_template_message_post
  # Send template message
  # @param whatsapp_number WhatsApp Number with country code. Example, 85264318721
  # @param [Hash] opts the optional parameters
  # @option opts [WASendTemplateRequestModel] :wa_send_template_request_model WhatsAppSendTemplateRequest request
  # @return [nil]
  describe 'v1_send_template_message_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_send_template_messages_post
  # Send template messages
  # @param [Hash] opts the optional parameters
  # @option opts [SendTemplatesRequestModel] :send_templates_request_model SendTemplatesRequestModel request
  # @return [nil]
  describe 'v1_send_template_messages_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v2_send_template_message_post
  # Send template message (Beta)
  # @param whatsapp_number WhatsApp Number with country code. Example, 85264318721
  # @param [Hash] opts the optional parameters
  # @option opts [WASendTemplateRequestModel] :wa_send_template_request_model WhatsAppSendTemplateRequest request
  # @return [nil]
  describe 'v2_send_template_message_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v2_send_template_messages_post
  # Send template messages (Beta)
  # @param [Hash] opts the optional parameters
  # @option opts [SendTemplatesRequestModel] :send_templates_request_model SendTemplatesRequestModel request
  # @return [nil]
  describe 'v2_send_template_messages_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
